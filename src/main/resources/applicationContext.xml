<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       https://www.springframework.org/schema/aop/spring-aop.xsd
       http://mybatis.org/schema/mybatis-spring
       http://mybatis.org/schema/mybatis-spring.xsd">

    <!--开启aspectJ的自动代理功能-->
    <aop:aspectj-autoproxy/>
    <!--Spring使用注解的方式扫描bean组件-->
    <!--use-default-filters为false代表一个都不扫描，配合include使用-->
    <context:component-scan base-package="com.athome" use-default-filters="true">
        <!--只扫描包含Controller这个注解的bean-->
        <!--
            <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"></context:include-filter>
        -->
        <!--扫描的时候排除掉Repository这个注解的bean-->
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"></context:exclude-filter>
    </context:component-scan>

    <!--数据库连接池，以下几个属性名一定要写正确！！！！！！！！！！！！-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>
    <!--加载数据库配置文件-->
    <!--  <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="location" value="db.properties"></property>
      </bean>-->
    <context:property-placeholder location="db.properties"></context:property-placeholder>
    <!--配置事务管理器-->
    <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--开启事务驱动，即对事务相关的注解进行扫描，解析含义并执行功能-->
    <tx:annotation-driven transaction-manager="dataSourceTransactionManager"/>
    <!--使用jdbcTemplate操作数据库,注册bean-->
    <!--  <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
      </bean>-->

    <!--配置SqlSessionFactory,加载Mybatis的全局配置文件及扫描mapper文件-->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <!--加载Mybatis全局配置文件-->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!--扫描mapper文件-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
    </bean>

    <!--扫描所有的mapper接口，让mapp文件能自动注入，重要！！！-->
    <mybatis-spring:scan base-package="com.athome.mybatis.mapper"></mybatis-spring:scan>

</beans>